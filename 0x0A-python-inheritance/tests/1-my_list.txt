The ``1-my_list`` module
======================

Using ``MyList``
-------------------

This is a my_list text file in reStructuredText format.  First import
``MyList`` from the ``1-my_list`` module:

    >>> MyList = __import__('1-my_list').MyList

Now use it:

    >>> my_list.print_sorted(5)
    Traceback (most recent call last):
    NameError: name 'my_list' is not defined

    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.append(5)
    >>> my_list.append(4)
    >>> print(my_list)
    [1, 5, 4]
    >>> my_list.print_sorted()
    [1, 4, 5]

    >>> my_list = MyList()
    >>> my_list.append(0)
    >>> my_list.append(-3)
    >>> my_list.append(1)
    >>> print(my_list)
    [0, -3, 1]
    >>> my_list.print_sorted()
    [-3, 0, 1]

    >>> my_list = MyList()
    >>> my_list.print_sorted()
    []

    >>> my_list = MyList()
    >>> my_list.append(0)
    >>> print(my_list)
    [0]
    >>> my_list.print_sorted()
    [0]

    >>> my_list = MyList()
    >>> my_list.print_sorted(5)
    Traceback (most recent call last):
    TypeError: print_sorted() takes 1 positional argument but 2 were given

    >>> l1 = MyList()
    >>> l1 = [1, 5, 2]
    >>> l1.print_sorted()
    Traceback (most recent call last):
    AttributeError: 'list' object has no attribute 'print_sorted'

    >>> other_list.prin_sorted()
    Traceback (most recent call last):
    NameError: name 'other_list' is not defined

    >>> my_list = MyList()
    >>> type(MyList())
    <class '1-my_list.MyList'>

    >>> my_list = MyList()
    >>> isinstance(MyList, object)
    True

    >>> my_list = MyList()
    >>> isinstance(MyList, list)
    False

    >>> my_list = MyList()
    >>> issubclass(MyList, list)
    True

    >>> my_list = MyList()
    >>> 'print_sorted' in dir(MyList)
    True
